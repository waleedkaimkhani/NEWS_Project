services:
  postgres:
    image: postgres:latest
    container_name: postgres_container
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin123
      POSTGRES_DB: news_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d news_db"] 
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin_container
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "8080:80"
    depends_on:
      - postgres
    networks:
      - app_network
    volumes:
      - ./servers.json:/pgadmin4/servers.json

  redis:
    image: redis:latest
    container_name: redis_container
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
    networks:
      - app_network

  prefect:
    image: prefecthq/prefect:2-latest
    container_name: prefect_container
    ports:
      - "4200:4200"
    environment:
      - PREFECT_UI_API_URL=http://localhost:4200/api
      - PREFECT_SERVER_API_HOST=0.0.0.0
      - PREFECT_SERVER_API_PORT=4200
      - PREFECT_UI_SERVE_PORT=4200
      - PREFECT_UI_SERVE_HOST=0.0.0.0
      - PREFECT_API_REQUEST_TIMEOUT=600
    command: ["prefect", "server", "start", "--host", "0.0.0.0", "--port", "4200"]
    volumes:
      - prefect_data:/root/.prefect
    networks:
      - app_network
    depends_on:
      - postgres
      - redis
    restart: always

  news_pipeline:
    image: python:3.9-slim  # Use a suitable Python image
    container_name: news_pipeline_container
    environment:
      - PREFECT_API_URL=http://prefect:4200/api
    volumes:
      - .:/app  # Mount the current directory to /app in the container
    working_dir: /app
    command: >
      sh -c "pip install -r /app/requirements.txt &&
         python /app/deployment.py"
    networks:
      - app_network
    depends_on:
      - prefect
      - postgres
      - redis
    
volumes:
  postgres_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/postgres
  redis_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/redis
  prefect_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/prefect

networks:
  app_network:
    driver: bridge
    name: app_network